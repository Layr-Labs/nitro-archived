package eigenda

import (
	"encoding/hex"
	"reflect"
	"testing"
)

func TestParseSequencerMsg(t *testing.T) {

	calldataString := "6b4e9387000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000004a00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000268d000000000000000000000000000000000000000000000000000000000000023a00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000038000000000000000000000000000000000000000000000000000000000000000609c2295a45e69a5369008e65fa2afc40eccb8e8be2f453998207e9b0a8d3bc72b0000000000000000000000000000000000000000000000000000000000143b152f3d0afe00f1a3eccb2a77a053c9fa850d4809913ece2f6a5dcdc9ecb5347c8b000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000143aad0000000000000000000000000000000000000000000000000000000000000002000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024d4f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000016086d042bea74e8fc60ce55410490d2e8bf312ff03aca9d369296d8cb25cd622096d79ebf24023971807ca680bfeac081bca250544e65147ffc0f7fdd3f3f973b885c252331c8385b767138702b5ba6155ae518fd98ebb966c5d2dfc2364ee0d49c203f38ebd01f85755bd59903ad850ea040fb94611fd554deb03c35ce43453f616866b1248350c1f1af7f3ce0f9b1beb712de850ce4e9cdfee6073fd54b8bca69011c9eca7800d59e6831f055972ae7430b8b52423cf455c2e0a3b11343890c713b16d87b5458476d589dd0f2146b14b9380f69aa8b1b546c75de4bfe925167204dd92138a76c02a4854973ed7016c6c110d41563acbc8cafefbe5d2f0ff490a83cd05a84bdfdd1542ebbbf20ca8b8968407a993919ffe5e159faf5941a95ae878a69d797b170a7a375d88b92c000c70871ae9ed5042f481743a27e97cf8665e8ebdea8f3dc226cc4c9a1cf3863ab4e60900a600fbfe5381cc0912f7aab88686000000000000000000000000000000000000000000000000000000000000000200010000000000000000000000000000000000000000000000000000000000001a78ee576b0026de661b72106bf447f5bb70881f24a3fa8b1f312992c8e165970633b392b3d3f66407d912aafcc2f0231c31918f0485e8476975edc710fcb

	calldata, err := hex.DecodeString(calldataString)

	expectedBatchHeaderHash, err := hex.DecodeString("a6c32cb6284bbb35310af14cdc0c1d9ce3738970c8ee9bafc1625269ef861cc8")
	if err != nil {
		t.Fatalf("Error decoding expectedBatchHeaderHash: %v", err)
	}

	expected := &EigenDABlobID{
		BatchHeaderHash:      expectedBatchHeaderHash, // BatchHeader content for hashing
		BlobIndex:            570,
		ReferenceBlockNumber: 1325741,
		QuorumIDs:            []uint32{0, 1},
	}

	// Call the function with the mock calldata
	result := ParseSequencerMsg(calldata)
	if err != nil {
		t.Fatalf("ParseSequencerMsg returned an error: %v", err)
	}

	if !reflect.DeepEqual(result, expected) {
		t.Errorf("Result was incorrect, got: %+v, want: %+v", result, expected)
	}

}
